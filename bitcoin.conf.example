##
## bitcoin.conf example configuration file.
## Lines beginning with # are comments.
## Remove # to activate the configuration feature.
##

# Run bitcoin-cli as a daemon
daemon=1

## Network-related settings:

# Have bitcoind discover available external ips to provide other nodes.
discover=1

# Set the port which bitcoind will use to listen for incoming connections from other bitcoin nodes.
port=8333

# Run on the test network instead of the real bitcoin network.
#testnet=0

# Run a regression test network
#regtest=0

# Connect via a SOCKS5 proxy
#proxy=127.0.0.1:9050

# Connect via a tor/onion proxy
#onion=127.0.0.1:9150

# Bind to given address and always listen on it. Use [host]:port notation for IPv6
# Bind to all available addresses with 0.0.0.0
bind=0.0.0.0
#bind=<addr>

# Bind to given address and whitelist peers connecting to it. Use [host]:port notation for IPv6
#whitebind=<addr>

##############################################################
##            Quick Primer on addnode vs connect            ##
##  Let's say for instance you use addnode=4.2.2.4          ##
##  addnode will connect you to and tell you about the      ##
##    nodes connected to 4.2.2.4.  In addition it will tell ##
##    the other nodes connected to it that you exist so     ##
##    they can connect to you.                              ##
##  connect will not do the above when you 'connect' to it. ##
##    It will *only* connect you to 4.2.2.4 and no one else.##
##                                                          ##
##  So if you're behind a firewall, or have other problems  ##
##  finding nodes, add some using 'addnode'.                ##
##                                                          ##
##  If you want to stay private, use 'connect' to only      ##
##  connect to "trusted" nodes.                             ##
##                                                          ##
##  If you run multiple nodes on a LAN, there's no need for ##
##  all of them to open lots of connections.  Instead       ##
##  'connect' them all to one node that is port forwarded   ##
##  and has lots of connections.                            ##
##       Thanks goes to [Noodle] on Freenode.               ##
##############################################################

# Use as many addnode= settings as you like to connect to specific peers.  Port is optional as needed.
addnode=69.61.29.79
addnode=83.162.202.182
addnode=80.100.203.186
addnode=184.152.68.163
addnode=93.188.224.253
addnode=216.151.3.186
addnode=91.230.200.134
addnode=195.189.126.35

# Alternatively use as many connect= settings as you like to connect ONLY to specific peers
#connect=93.188.224.25
#connect=69.61.29.79:8333

# Listening mode, enabled by default except when 'connect' is being used
listen=1

# Maximum number of inbound+outbound connections.
#maxconnections=120

#
# JSON-RPC options (for controlling a running Bitcoin/bitcoind process)
#

# server=1 tells Bitcoin-QT and bitcoind to accept JSON-RPC commands
server=0

# Bind to given address to listen for JSON-RPC connections. Use [host]:port notation for IPv6.
# This option can be specified multiple times (default: bind to all interfaces)
#rpcbind=<addr>

# You must set rpcuser and rpcpassword to secure the JSON-RPC api
#rpcuser=Ulysseys
#rpcpassword=YourSuperGreatPasswordNumber_DO_NOT_USE_THIS_OR_YOU_WILL_GET_ROBBED_385593

# How many seconds bitcoin will wait for a complete RPC HTTP request.
# after the HTTP connection is established. 
#rpctimeout=30

# By default, only RPC connections from localhost are allowed.
# Specify as many rpcallowip= settings as you like to allow connections from other hosts,
# either as a single IPv4/IPv6 or with a subnet specification.

# NOTE: opening up the RPC port to hosts outside your local trusted network is NOT RECOMMENDED,
# because the rpcpassword is transmitted over the network unencrypted.

#rpcallowip=10.1.1.34/255.255.255.0
#rpcallowip=1.2.3.4/24
#rpcallowip=2001:db8:85a3:0:0:8a2e:370:7334/96

# Listen for RPC connections on this TCP port:
#rpcport=8332

# You can use Bitcoin or bitcoind to send commands to Bitcoin/bitcoind
# running on another host using this option:
#rpcconnect=127.0.0.1

# Use Secure Sockets Layer (also known as TLS or HTTPS) to communicate
# with Bitcoin -server or bitcoind
#rpcssl=1

# OpenSSL settings used when rpcssl=1
#rpcsslciphers=TLSv1+HIGH:!SSLv2:!aNULL:!eNULL:!AH:!3DES:@STRENGTH
#rpcsslcertificatechainfile=server.cert
#rpcsslprivatekeyfile=server.pem

# Bitcoin will stop relaying free transactions based on an exponential rate-limiting function, 
# where more transactions in a shorter period of time are more likely to be dropped 
# (and the default average is to allow about 150Kbytes over 10 minutes). 
# limitfreerelay is KBytes/minute rate; default is 15.
# <n> Continuously rate-limit free transactions to <n>*1000 bytes per minute (default:15)
limitfreerelay=5

# Fees (in BTC/Kb) smaller than this are considered zero fee for relaying (default: 0.00001)
minrelaytxfee=0.001

# Fees smaller than this are considered zero fee for transaction creation (default 0.00001)
mintxfee=0.001

# Transaction Fee Changes in 0.10.0

# Send transactions as zero-fee transactions if possible (default: 0)
#sendfreetransactions=0

# Create transactions that have enough fees (or priority) so they are likely to begin confirmation within n blocks (default: 1).
# This setting is over-ridden by the paytxfee option if set.
#txconfirmtarget=1

# Pay an optional transaction fee every time you send bitcoins.  Transactions with fees
# are more likely than free transactions to be included in generated blocks, so may
# be validated sooner.
#paytxfee=0.001

# Miscellaneous options

# Pre-generate this many public/private key pairs, so wallet backups will be valid for
# both prior transactions and several dozen future transactions.
#keypool=100

# Set the blockchain database to be searchable for historical transaction information.
# Default is 0, set to 1 if needed for services such as running an electrum-btc-server or block explorer
#txindex=1

# User interface options

# Start Bitcoin minimized
#min=1

# Minimize to the system tray
#minimizetotray=1

# Set maximum block size in bytes (default: 750000)
blockmaxsize=1000000

# Bytes in new blocks to allocate for free / high priority transactions (default: 50000)
#blockprioritysize=0

# Include IP addresses in debug output (default: 0)
logips=0

# Disable wallet functions (default: 0)
#disablewallet=1


# Reduce storage requirements by pruning (deleting) old blocks.
# This mode disables wallet support and is incompatible with -txindex.
# Warning: Reverting this setting requires re-downloading the entire blockchain.
# (default: 0 = disable pruning blocks, >550 = target size in MiB to use for block files)
# -prune=<n>
